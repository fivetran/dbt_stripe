config-version: 2

name: 'stripe_integration_tests'
version: '0.15.2'

profile: 'integration_tests'

# For use with validations
models:
  +schema: "stripe_{{ var('directed_schema','dev') }}"

vars:  
  stripe_schema: stripe_integrations_tests_15
  stripe__standardized_billing_model_enabled: true
  stripe__using_credit_notes: true
  stripe_source:
    stripe_account_identifier:                "account_data"
    stripe_group_identifier:                  "group_data"
    stripe_balance_transaction_identifier:    "balance_transaction_data"
    stripe_card_identifier:                   "card_data"
    stripe_charge_identifier:                 "charge_data"
    stripe_customer_identifier:               "customer_data"
    stripe_discount_identifier:               "discount_data"
    stripe_dispute_identifier:                "dispute_data"
    stripe_fee_identifier:                    "fee_data"
    stripe_invoice_identifier:                "invoice_data"
    stripe_invoice_line_item_identifier:      "invoice_line_item_data"
    stripe_payment_intent_identifier:         "payment_intent_data"
    stripe_payment_method_card_identifier:    "payment_method_card_data"
    stripe_payment_method_identifier:         "payment_method_data"
    stripe_payout_identifier:                 "payout_data"
    stripe_plan_identifier:                   "plan_data"
    stripe_price_identifier:                  "price_data"
    stripe_product_identifier:                "product_data"
    stripe_refund_identifier:                 "refund_data"
    stripe_subscription_history_identifier:   "subscription_history_data"
    stripe_subscription_identifier:           "subscription_data"
    stripe_transfer_identifier:               "transfer_data"
    stripe_credit_note_identifier:            "credit_note_data"
    stripe_credit_note_line_item_identifier:  "credit_note_line_item_data"

  stripe__subscription_history: false

seeds:
  stripe_integration_tests:
    +quote_columns: "{{ true if target.type in ('redshift','postgres') else false }}"
    +column_types:
      _fivetran_synced: timestamp
      created: timestamp
      canceled_at: timestamp
      voided_at: timestamp
      invoice_id: "{{ 'varchar(500)' if target.type in ('redshift','postgres') else 'string'}}"
      end: timestamp
    balance_transaction_data:
      +column_types:
        available_on: timestamp
    charge_data:
      +column_types:
        balance_transaction_id: "{{ 'varchar(500)' if target.type in ('redshift','postgres') else 'string'}}"
        created: timestamp
    customer_data:
      +column_types:
        description: "{{ 'varchar(500)' if target.type in ('redshift','postgres') else 'string'}}"
    payout_data:
      +column_types:
        destination_bank_account_id: "{{ 'varchar(500)' if target.type in ('redshift','postgres') else 'string'}}"
        destination_card_id: "{{ 'varchar(500)' if target.type in ('redshift','postgres') else 'string'}}"
    discount_data:
      +enabled: "{{ true if target.type not in ('snowflake', 'postgres') else false }}"
    discount_data_snowflake:
      +alias: discount_data
      +enabled: "{{ true if target.type == 'snowflake' else false }}"
    discount_data_postgres:
      +alias: discount_data
      +enabled: "{{ true if target.type == 'postgres' else false }}"


dispatch:
  - macro_namespace: dbt_utils
    search_order: ['spark_utils', 'dbt_utils']